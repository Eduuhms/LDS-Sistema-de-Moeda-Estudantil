<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editar Conta - Sistema de Moeda Estudantil</title>
    <style>
        :root {
            --primary: #4361ee;
            --primary-dark: #3a56d4;
            --light: #f8f9fa;
            --dark: #212529;
            --danger: #dc3545;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: var(--dark);
            background-color: var(--light);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 2rem;
        }

        .container {
            width: 100%;
            max-width: 800px;
            background: white;
            border-radius: 8px;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        }

        h1 {
            color: var(--primary);
            margin-bottom: 1.5rem;
            text-align: center;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        input,
        select,
        textarea {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ced4da;
            border-radius: 4px;
            font-size: 1rem;
        }

        select {
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 0.75rem center;
            background-size: 1rem;
        }

        .btn {
            display: inline-block;
            padding: 0.75rem 1.5rem;
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.2s;
            text-decoration: none;
            text-align: center;
        }

        .btn:hover {
            background-color: var(--primary-dark);
        }

        .btn-danger {
            background-color: var(--danger);
        }

        .btn-danger:hover {
            background-color: #c82333;
        }

        .btn-group {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }

        .form-section {
            display: none;
        }

        .form-section.active {
            display: block;
        }

        .error-message {
            color: var(--danger);
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: none;
        }

        .required:after {
            content: " *";
            color: var(--danger);
        }

        .locked-field {
            background-color: #e9ecef;
            cursor: not-allowed;
        }

        @media (max-width: 768px) {
            .container {
                padding: 1.5rem;
            }

            .btn-group {
                flex-direction: column;
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Editar Conta</h1>

        <form id="editarForm">
            <div class="form-group">
                <label for="tipoUsuario">Tipo de Usuário</label>
                <input type="text" id="tipoUsuario" class="locked-field" readonly>
            </div>

            <!-- Campos comuns a todos os usuários -->
            <div class="form-group">
                <label for="nome" class="required">Nome</label>
                <input type="text" id="nome" name="nome" required>
                <div class="error-message" id="nomeError">Por favor, informe seu nome</div>
            </div>

            <div class="form-group">
                <label for="email" class="required">E-mail</label>
                <input type="email" id="email" name="email" required>
                <div class="error-message" id="emailError">Por favor, informe um e-mail válido</div>
            </div>

            <div class="form-group">
                <label for="senha">Senha (deixe em branco para não alterar)</label>
                <input type="password" id="senha" name="senha" minlength="6">
                <div class="error-message" id="senhaError">A senha deve ter pelo menos 6 caracteres</div>
            </div>

            <!-- Seção específica para Aluno -->
            <div id="alunoSection" class="form-section">
                <div class="form-group">
                    <label for="cpfAluno">CPF</label>
                    <input type="text" id="cpfAluno" class="locked-field" readonly>
                </div>

                <div class="form-group">
                    <label for="rgAluno">RG</label>
                    <input type="text" id="rgAluno" class="locked-field" readonly>
                </div>

                <div class="form-group">
                    <label for="enderecoAluno" class="required">Endereço</label>
                    <input type="text" id="enderecoAluno" name="enderecoAluno">
                    <div class="error-message" id="enderecoAlunoError">Por favor, informe seu endereço</div>
                </div>

                <div class="form-group">
                    <label for="cursoAluno" class="required">Curso</label>
                    <input type="text" id="cursoAluno" name="cursoAluno">
                    <div class="error-message" id="cursoAlunoError">Por favor, informe seu curso</div>
                </div>

                <div class="form-group">
                    <label for="instituicaoAluno" class="required">Instituição de Ensino</label>
                    <select id="instituicaoAluno" name="instituicaoAluno">
                        <option value="">Selecione uma instituição</option>
                        <!-- As opções serão carregadas via JavaScript -->
                    </select>
                    <div class="error-message" id="instituicaoAlunoError">Por favor, selecione uma instituição</div>
                </div>
            </div>

            <!-- Seção específica para Professor -->
            <div id="professorSection" class="form-section">
                <div class="form-group">
                    <label for="cpfProfessor">CPF</label>
                    <input type="text" id="cpfProfessor" class="locked-field" readonly>
                </div>

                <div class="form-group">
                    <label for="departamentoProfessor" class="required">Departamento</label>
                    <input type="text" id="departamentoProfessor" name="departamentoProfessor">
                    <div class="error-message" id="departamentoProfessorError">Por favor, informe seu departamento</div>
                </div>

                <div class="form-group">
                    <label for="instituicaoProfessor" class="required">Instituição de Ensino</label>
                    <select id="instituicaoProfessor" name="instituicaoProfessor">
                        <option value="">Selecione uma instituição</option>
                        <!-- As opções serão carregadas via JavaScript -->
                    </select>
                    <div class="error-message" id="instituicaoProfessorError">Por favor, selecione uma instituição</div>
                </div>
            </div>

            <!-- Seção específica para Empresa -->
            <div id="empresaSection" class="form-section">
                <div class="form-group">
                    <label for="cnpjEmpresa">CNPJ</label>
                    <input type="text" id="cnpjEmpresa" class="locked-field" readonly>
                </div>

                <div class="form-group">
                    <label for="enderecoEmpresa" class="required">Endereço</label>
                    <input type="text" id="enderecoEmpresa" name="enderecoEmpresa">
                    <div class="error-message" id="enderecoEmpresaError">Por favor, informe o endereço da empresa</div>
                </div>

                <div class="form-group">
                    <label for="telefoneEmpresa">Telefone</label>
                    <input type="text" id="telefoneEmpresa" name="telefoneEmpresa" placeholder="(00) 00000-0000">
                    <div class="error-message" id="telefoneEmpresaError">Por favor, informe um telefone válido</div>
                </div>

                <div class="form-group">
                    <label for="descricaoEmpresa">Descrição</label>
                    <textarea id="descricaoEmpresa" name="descricaoEmpresa" rows="3"></textarea>
                </div>
            </div>

            <div class="btn-group">
                <button type="submit" class="btn">Salvar Alterações</button>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tipoUsuarioSelect = document.getElementById('tipoUsuario');
            const alunoSection = document.getElementById('alunoSection');
            const professorSection = document.getElementById('professorSection');
            const empresaSection = document.getElementById('empresaSection');
            const form = document.getElementById('editarForm');
            const btnExcluirConta = document.getElementById('btnExcluirConta');
            const confirmModal = document.getElementById('confirmModal');
            const confirmDelete = document.getElementById('confirmDelete');
            const cancelDelete = document.getElementById('cancelDelete');

            let currentUser = null;
            let userId = null;

            // Carrega os dados do usuário
            fetch('/user-data')
                .then(response => response.json())
                .then(user => {
                    currentUser = user;
                    userId = user.id;

                    // Preenche os campos comuns
                    document.getElementById('nome').value = user.nome || '';
                    document.getElementById('email').value = user.email || '';
                    tipoUsuarioSelect.value = user.tipo || '';

                    // Mostra a seção correta conforme o tipo de usuário
                    alunoSection.classList.remove('active');
                    professorSection.classList.remove('active');
                    empresaSection.classList.remove('active');

                    if (user.tipo === 'aluno') {
                        alunoSection.classList.add('active');

                        // Preenche os campos específicos do aluno
                        document.getElementById('cpfAluno').value = user.cpf || '';
                        document.getElementById('rgAluno').value = user.rg || '';
                        document.getElementById('enderecoAluno').value = user.endereco || '';
                        document.getElementById('cursoAluno').value = user.curso || '';

                        // Carrega as instituições de ensino
                        carregarInstituicoes('instituicaoAluno', user.instituicao_ensino_id);

                    } else if (user.tipo === 'professor') {
                        professorSection.classList.add('active');

                        // Preenche os campos específicos do professor
                        document.getElementById('cpfProfessor').value = user.cpf || '';
                        document.getElementById('departamentoProfessor').value = user.departamento || '';

                        // Carrega as instituições de ensino
                        carregarInstituicoes('instituicaoProfessor', user.instituicao_ensino_id);

                    } else if (user.tipo === 'empresa') {
                        empresaSection.classList.add('active');

                        // Preenche os campos específicos da empresa
                        document.getElementById('cnpjEmpresa').value = user.cnpj || '';
                        document.getElementById('enderecoEmpresa').value = user.endereco || '';
                        document.getElementById('telefoneEmpresa').value = user.telefone || '';
                        document.getElementById('descricaoEmpresa').value = user.descricao || '';
                    }
                })
                .catch(error => {
                    console.error('Erro ao carregar dados do usuário:', error);
                    alert('Erro ao carregar dados da conta. Por favor, tente novamente.');
                    window.location.href = '/';
                });

            // Função para carregar instituições de ensino
            function carregarInstituicoes(selectId, selectedId) {
                fetch('/instituicoes')
                    .then(response => response.json())
                    .then(instituicoes => {
                        const select = document.getElementById(selectId);
                        select.innerHTML = '<option value="">Selecione uma instituição</option>';

                        instituicoes.forEach(instituicao => {
                            const option = document.createElement('option');
                            option.value = instituicao.id;
                            option.textContent = instituicao.nome;
                            if (instituicao.id == selectedId) {
                                option.selected = true;
                            }
                            select.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error('Erro ao carregar instituições:', error);
                    });
            }

            // Validação do formulário
            form.addEventListener('submit', function (e) {
                e.preventDefault();

                const nome = document.getElementById('nome').value;
                const email = document.getElementById('email').value;
                const senha = document.getElementById('senha').value;
                const tipoUsuario = tipoUsuarioSelect.value;

                let isValid = true;

                // Valida campos comuns
                if (!nome) {
                    document.getElementById('nomeError').style.display = 'block';
                    isValid = false;
                } else {
                    document.getElementById('nomeError').style.display = 'none';
                }

                if (!email || !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                    document.getElementById('emailError').style.display = 'block';
                    isValid = false;
                } else {
                    document.getElementById('emailError').style.display = 'none';
                }

                if (senha && senha.length < 6) {
                    document.getElementById('senhaError').style.display = 'block';
                    isValid = false;
                } else {
                    document.getElementById('senhaError').style.display = 'none';
                }

                // Valida campos específicos
                if (tipoUsuario === 'aluno') {
                    const endereco = document.getElementById('enderecoAluno').value;
                    const curso = document.getElementById('cursoAluno').value;
                    const instituicao = document.getElementById('instituicaoAluno').value;
                    const cpf = document.getElementById('cpfAluno').value;
                    const rg = document.getElementById('rgAluno').value;

                    if (!endereco) {
                        document.getElementById('enderecoAlunoError').style.display = 'block';
                        isValid = false;
                    } else {
                        document.getElementById('enderecoAlunoError').style.display = 'none';
                    }

                    if (!curso) {
                        document.getElementById('cursoAlunoError').style.display = 'block';
                        isValid = false;
                    } else {
                        document.getElementById('cursoAlunoError').style.display = 'none';
                    }

                    if (!instituicao) {
                        document.getElementById('instituicaoAlunoError').style.display = 'block';
                        isValid = false;
                    } else {
                        document.getElementById('instituicaoAlunoError').style.display = 'none';
                    }

                } else if (tipoUsuario === 'professor') {
                    const departamento = document.getElementById('departamentoProfessor').value;
                    const instituicao = document.getElementById('instituicaoProfessor').value;
                    const cpf = document.getElementById('cpfProfessor').value;

                    if (!departamento) {
                        document.getElementById('departamentoProfessorError').style.display = 'block';
                        isValid = false;
                    } else {
                        document.getElementById('departamentoProfessorError').style.display = 'none';
                    }

                    if (!instituicao) {
                        document.getElementById('instituicaoProfessorError').style.display = 'block';
                        isValid = false;
                    } else {
                        document.getElementById('instituicaoProfessorError').style.display = 'none';
                    }

                } else if (tipoUsuario === 'empresa') {
                    const endereco = document.getElementById('enderecoEmpresa').value;
                    const cnpj = document.getElementById('cnpjEmpresa').value;

                    if (!endereco) {
                        document.getElementById('enderecoEmpresaError').style.display = 'block';
                        isValid = false;
                    } else {
                        document.getElementById('enderecoEmpresaError').style.display = 'none';
                    }
                }

                if (!isValid) return;

                // Prepara os dados para envio
                const formData = {
                    nome,
                    email,
                    senha: senha || undefined // Envia a senha apenas se foi alterada
                };

                // Adiciona campos específicos conforme o tipo de usuário
                if (tipoUsuario === 'aluno') {
                    formData.endereco = document.getElementById('enderecoAluno').value;
                    formData.curso = document.getElementById('cursoAluno').value;
                    formData.instituicaoEnsinoId = document.getElementById('instituicaoAluno').value;
                    formData.cpf = document.getElementById('cpfAluno').value;
                    formData.rg = document.getElementById('rgAluno').value;



                    // Primeiro busca o ID do aluno associado ao usuário
                    fetch(`/alunos/usuario/${currentUser.id}`)
                        .then(response => response.json())
                        .then(aluno => {
                            if (!aluno || !aluno.id) {
                                throw new Error('Aluno não encontrado');
                            }

                            // Envia para a rota de atualização de aluno com o ID correto
                            return fetch(`/alunos/atualizar/${aluno.id}`, {
                                method: 'PUT',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(formData)
                            });
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.erro) {
                                alert('Erro: ' + data.erro);
                            } else {
                                alert('Dados atualizados com sucesso!');
                                window.location.href = 'http://localhost:3000/'
                            }
                        })
                        .catch(error => {
                            console.error('Erro:', error);
                            alert('Ocorreu um erro ao atualizar os dados');
                        });

                } else if (tipoUsuario === 'professor') {
                    formData.departamento = document.getElementById('departamentoProfessor').value;
                    formData.instituicaoEnsinoId = document.getElementById('instituicaoProfessor').value;
                    formData.cpf = document.getElementById('cpfProfessor').value;

                    // Primeiro busca o ID do professor associado ao usuário
                    fetch(`/professores/usuario/${currentUser.id}`)
                        .then(response => response.json())
                        .then(professor => {
                            if (!professor || !professor.id) {
                                throw new Error('Professor não encontrado');
                            }

                            // Envia para a rota de atualização de professor com o ID correto
                            return fetch(`/professores/atualizar/${professor.id}`, {
                                method: 'PUT',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(formData)
                            });
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.erro) {
                                alert('Erro: ' + data.erro);
                            } else {
                                alert('Dados atualizados com sucesso!');
                                window.location.href = 'http://localhost:3000/'
                            }
                        })
                        .catch(error => {
                            console.error('Erro:', error);
                            alert('Ocorreu um erro ao atualizar os dados');
                        });

                } else if (tipoUsuario === 'empresa') {
                    formData.endereco = document.getElementById('enderecoEmpresa').value;
                    formData.telefone = document.getElementById('telefoneEmpresa').value;
                    formData.descricao = document.getElementById('descricaoEmpresa').value;
                    formData.cnpj = document.getElementById('cnpjEmpresa').value;

                    // Primeiro busca o ID da empresa associada ao usuário
                    fetch(`/empresas/usuario/${currentUser.id}`)
                        .then(response => response.json())
                        .then(empresa => {
                            if (!empresa || !empresa.id) {
                                throw new Error('Empresa não encontrada');
                            }

                            // Envia para a rota de atualização de empresa com o ID correto
                            return fetch(`/empresas/atualizar/${empresa.id}`, {
                                method: 'PUT',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify(formData)
                            });
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.erro) {
                                alert('Erro: ' + data.erro);
                            } else {
                                alert('Dados atualizados com sucesso!');
                                window.location.href = 'http://localhost:3000/'
                            }
                        })
                        .catch(error => {
                            console.error('Erro:', error);
                            alert('Ocorreu um erro ao atualizar os dados');
                        });
                }
            });

        });
    </script>
</body>

</html>