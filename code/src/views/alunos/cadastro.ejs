<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cadastro de Aluno</title>
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    .mensagem-erro {
      color: #d9534f;
      background-color: #f9eaea;
      border: 1px solid #d9534f;
      border-radius: 4px;
      padding: 10px;
      margin: 10px 0;
      display: none;
    }
    
    .mensagem-sucesso {
      color: #5cb85c;
      background-color: #eaf9ea;
      border: 1px solid #5cb85c;
      border-radius: 4px;
      padding: 10px;
      margin: 10px 0;
      display: none;
    }
    
    .campo-invalido {
      border-color: #d9534f;
    }
    
    .erro-campo {
      color: #d9534f;
      font-size: 0.8em;
      margin-top: 5px;
      display: none;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Cadastro de Aluno</h1>
    
    <div id="mensagem-erro" class="mensagem-erro"></div>
    <div id="mensagem-sucesso" class="mensagem-sucesso"></div>
    
    <form id="form-cadastro">
      <div class="form-group">
        <label for="nome">Nome completo:</label>
        <input type="text" id="nome" name="nome" required>
        <div id="erro-nome" class="erro-campo">Por favor, informe seu nome completo.</div>
      </div>
      
      <div class="form-group">
        <label for="email">E-mail:</label>
        <input type="email" id="email" name="email" required>
        <div id="erro-email" class="erro-campo">Por favor, informe um e-mail válido.</div>
      </div>
      
      <div class="form-group">
        <label for="senha">Senha:</label>
        <input type="password" id="senha" name="senha" required>
        <div id="erro-senha" class="erro-campo">A senha deve ter pelo menos 6 caracteres.</div>
      </div>
      
      <div class="form-group">
        <label for="cpf">CPF:</label>
        <input type="text" id="cpf" name="cpf" placeholder="000.000.000-00" required>
        <div id="erro-cpf" class="erro-campo">Por favor, informe um CPF válido.</div>
      </div>
      
      <div class="form-group">
        <label for="rg">RG:</label>
        <input type="text" id="rg" name="rg" required>
        <div id="erro-rg" class="erro-campo">Por favor, informe um RG válido.</div>
      </div>
      
      <div class="form-group">
        <label for="endereco">Endereço completo:</label>
        <input type="text" id="endereco" name="endereco" required>
        <div id="erro-endereco" class="erro-campo">Por favor, informe seu endereço completo.</div>
      </div>
      
      <div class="form-group">
        <label for="instituicaoEnsinoId">Instituição de Ensino:</label>
        <select id="instituicaoEnsinoId" name="instituicaoEnsinoId" required>
          <option value="">Selecione uma instituição</option>
          <!-- As opções serão carregadas via JavaScript -->
        </select>
        <div id="erro-instituicao" class="erro-campo">Por favor, selecione uma instituição de ensino.</div>
        <div id="erro-carregamento-instituicoes" class="erro-campo">Não foi possível carregar a lista de instituições. Por favor, tente novamente mais tarde.</div>
      </div>
      
      <div class="form-group">
        <label for="curso">Curso:</label>
        <input type="text" id="curso" name="curso" required>
        <div id="erro-curso" class="erro-campo">Por favor, informe seu curso.</div>
      </div>
      
      <button type="submit">Cadastrar</button>
    </form>
  </div>
  
  <script>
    // Carregar a lista de instituições de ensino
    document.addEventListener('DOMContentLoaded', async () => {
      try {
        const response = await fetch('/instituicoes');
        
        if (!response.ok) {
          const erro = await response.json();
          document.getElementById('erro-carregamento-instituicoes').textContent = 
            erro.erro || 'Não foi possível carregar a lista de instituições.';
          document.getElementById('erro-carregamento-instituicoes').style.display = 'block';
          return;
        }
        
        const instituicoes = await response.json();
        
        if (instituicoes.length === 0) {
          document.getElementById('erro-carregamento-instituicoes').textContent = 
            'Não há instituições de ensino cadastradas no momento.';
          document.getElementById('erro-carregamento-instituicoes').style.display = 'block';
          return;
        }
        
        const selectInstituicao = document.getElementById('instituicaoEnsinoId');
        
        instituicoes.forEach(instituicao => {
          const option = document.createElement('option');
          option.value = instituicao.id;
          option.textContent = instituicao.nome;
          selectInstituicao.appendChild(option);
        });
      } catch (error) {
        console.error('Erro ao carregar instituições:', error);
        document.getElementById('erro-carregamento-instituicoes').textContent = 
          'Ocorreu um erro ao carregar as instituições. Por favor, tente novamente mais tarde.';
        document.getElementById('erro-carregamento-instituicoes').style.display = 'block';
      }
    });

    // Validações
    function validarEmail(email) {
      const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return re.test(email);
    }
    
    function validarCPF(cpf) {
      // Remove caracteres não numéricos
      cpf = cpf.replace(/[^\d]/g, '');
      
      // Verifica se tem 11 dígitos
      if (cpf.length !== 11) {
        return false;
      }
      
      // Verifica se todos os dígitos são iguais (CPF inválido, mas passa na validação matemática)
      if (/^(\d)\1+$/.test(cpf)) {
        return false;
      }
      
      // Valida o primeiro dígito verificador
      let soma = 0;
      for (let i = 0; i < 9; i++) {
        soma += parseInt(cpf.charAt(i)) * (10 - i);
      }
      let resto = 11 - (soma % 11);
      let digitoVerificador1 = resto === 10 || resto === 11 ? 0 : resto;
      
      if (digitoVerificador1 !== parseInt(cpf.charAt(9))) {
        return false;
      }
      
      // Valida o segundo dígito verificador
      soma = 0;
      for (let i = 0; i < 10; i++) {
        soma += parseInt(cpf.charAt(i)) * (11 - i);
      }
      resto = 11 - (soma % 11);
      let digitoVerificador2 = resto === 10 || resto === 11 ? 0 : resto;
      
      return digitoVerificador2 === parseInt(cpf.charAt(10));
    }
    
    function validarRG(rg) {
      // Remove caracteres não alfanuméricos
      rg = rg.replace(/[^\w]/g, '');
      
      // RG deve ter no mínimo 5 caracteres e no máximo 14
      return rg.length >= 5 && rg.length <= 14;
    }
    
    function validarFormulario() {
      let valido = true;
      
      // Limpar mensagens de erro
      document.querySelectorAll('.erro-campo').forEach(erro => {
        erro.style.display = 'none';
      });
      
      document.querySelectorAll('.campo-invalido').forEach(campo => {
        campo.classList.remove('campo-invalido');
      });
      
      // Validar campos
      const nome = document.getElementById('nome');
      if (!nome.value.trim()) {
        document.getElementById('erro-nome').style.display = 'block';
        nome.classList.add('campo-invalido');
        valido = false;
      }
      
      const email = document.getElementById('email');
      if (!email.value.trim() || !validarEmail(email.value)) {
        document.getElementById('erro-email').style.display = 'block';
        email.classList.add('campo-invalido');
        valido = false;
      }
      
      const senha = document.getElementById('senha');
      if (!senha.value || senha.value.length < 6) {
        document.getElementById('erro-senha').style.display = 'block';
        senha.classList.add('campo-invalido');
        valido = false;
      }
      
      const cpf = document.getElementById('cpf');
      if (!cpf.value.trim() || !validarCPF(cpf.value)) {
        document.getElementById('erro-cpf').textContent = 'Por favor, informe um CPF válido.';
        document.getElementById('erro-cpf').style.display = 'block';
        cpf.classList.add('campo-invalido');
        valido = false;
      }
      
      const rg = document.getElementById('rg');
      if (!rg.value.trim() || !validarRG(rg.value)) {
        document.getElementById('erro-rg').textContent = 'RG inválido. Deve ter entre 5 e 14 caracteres.';
        document.getElementById('erro-rg').style.display = 'block';
        rg.classList.add('campo-invalido');
        valido = false;
      }
      
      const endereco = document.getElementById('endereco');
      if (!endereco.value.trim()) {
        document.getElementById('erro-endereco').style.display = 'block';
        endereco.classList.add('campo-invalido');
        valido = false;
      }
      
      const instituicaoEnsinoId = document.getElementById('instituicaoEnsinoId');
      if (!instituicaoEnsinoId.value) {
        document.getElementById('erro-instituicao').style.display = 'block';
        instituicaoEnsinoId.classList.add('campo-invalido');
        valido = false;
      }
      
      const curso = document.getElementById('curso');
      if (!curso.value.trim()) {
        document.getElementById('erro-curso').style.display = 'block';
        curso.classList.add('campo-invalido');
        valido = false;
      }
      
      return valido;
    }
    
    // Formatar CPF durante digitação
    document.getElementById('cpf').addEventListener('input', function(e) {
      let cpf = e.target.value.replace(/\D/g, '');
      if (cpf.length > 11) cpf = cpf.substring(0, 11);
      
      if (cpf.length > 9) {
        cpf = cpf.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, '$1.$2.$3-$4');
      } else if (cpf.length > 6) {
        cpf = cpf.replace(/(\d{3})(\d{3})(\d{3})/, '$1.$2.$3');
      } else if (cpf.length > 3) {
        cpf = cpf.replace(/(\d{3})(\d{3})/, '$1.$2');
      }
      
      e.target.value = cpf;
    });

    // Enviar o formulário
    document.getElementById('form-cadastro').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Esconder mensagens anteriores
      document.getElementById('mensagem-erro').style.display = 'none';
      document.getElementById('mensagem-sucesso').style.display = 'none';
      
      // Validar formulário
      if (!validarFormulario()) {
        return;
      }
      
      const formData = {
        nome: document.getElementById('nome').value,
        email: document.getElementById('email').value,
        senha: document.getElementById('senha').value,
        cpf: document.getElementById('cpf').value,
        rg: document.getElementById('rg').value,
        endereco: document.getElementById('endereco').value,
        instituicaoEnsinoId: document.getElementById('instituicaoEnsinoId').value,
        curso: document.getElementById('curso').value
      };
      
      try {
        const response = await fetch('/alunos/cadastrar', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });
        
        const data = await response.json();
        
        if (response.ok) {
          // Mostrar mensagem de sucesso
          const mensagemSucesso = document.getElementById('mensagem-sucesso');
          mensagemSucesso.textContent = 'Cadastro realizado com sucesso! Redirecionando para a página de login...';
          mensagemSucesso.style.display = 'block';
          
          // Limpar formulário
          document.getElementById('form-cadastro').reset();
          
          // Redirecionar após um tempo
          setTimeout(() => {
            window.location.href = '/login';
          }, 2000);
        } else {
          // Mostrar mensagem de erro
          const mensagemErro = document.getElementById('mensagem-erro');
          
          if (data.campos_faltantes) {
            mensagemErro.textContent = `Erro: ${data.erro}. Campos faltantes: ${data.campos_faltantes.join(', ')}.`;
          } else {
            mensagemErro.textContent = data.erro || 'Ocorreu um erro ao cadastrar. Por favor, tente novamente.';
          }
          
          mensagemErro.style.display = 'block';
          
          // Destacar campos com erro
          if (data.erro.includes('CPF')) {
            document.getElementById('cpf').classList.add('campo-invalido');
            document.getElementById('erro-cpf').textContent = data.erro;
            document.getElementById('erro-cpf').style.display = 'block';
          }
          
          if (data.erro.includes('RG')) {
            document.getElementById('rg').classList.add('campo-invalido');
            document.getElementById('erro-rg').textContent = data.erro;
            document.getElementById('erro-rg').style.display = 'block';
          }
          
          if (data.erro.includes('E-mail')) {
            document.getElementById('email').classList.add('campo-invalido');
            document.getElementById('erro-email').textContent = data.erro;
            document.getElementById('erro-email').style.display = 'block';
          }
          
          if (data.erro.includes('Instituição')) {
            document.getElementById('instituicaoEnsinoId').classList.add('campo-invalido');
            document.getElementById('erro-instituicao').textContent = data.erro;
            document.getElementById('erro-instituicao').style.display = 'block';
          }
        }
      } catch (error) {
        console.error('Erro ao enviar formulário:', error);
        
        const mensagemErro = document.getElementById('mensagem-erro');
        mensagemErro.textContent = 'Erro de conexão. Por favor, verifique sua internet e tente novamente.';
        mensagemErro.style.display = 'block';
      }
    });
  </script>
</body>
</html> 