<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Instituições de Ensino</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f5f5f5;
    }
    .container {
      max-width: 1200px;
      margin: 0 auto;
      background-color: #fff;
      padding: 20px;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    h1 {
      color: #333;
      margin-bottom: 20px;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }
    th, td {
      padding: 12px 15px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }
    th {
      background-color: #f8f8f8;
      font-weight: bold;
    }
    tr:hover {
      background-color: #f5f5f5;
    }
    .btn {
      display: inline-block;
      padding: 8px 15px;
      margin-right: 5px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      text-decoration: none;
      font-size: 14px;
    }
    .btn-primary {
      background-color: #007bff;
      color: white;
    }
    .btn-danger {
      background-color: #dc3545;
      color: white;
    }
    .btn-secondary {
      background-color: #6c757d;
      color: white;
    }
    .actions {
      display: flex;
      justify-content: flex-end;
      margin-bottom: 20px;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Instituições de Ensino</h1>
    
    <div class="actions">
      <button id="btn-nova-instituicao" class="btn btn-primary">Nova Instituição</button>
    </div>
    
    <table>
      <thead>
        <tr>
          <th>ID</th>
          <th>Nome</th>
          <th>CNPJ</th>
          <th>Endereço</th>
          <th>Telefone</th>
          <th>Ações</th>
        </tr>
      </thead>
      <tbody id="tabela-instituicoes">
        <% if (instituicoes && instituicoes.length > 0) { %>
          <% instituicoes.forEach(instituicao => { %>
            <tr>
              <td><%= instituicao.id %></td>
              <td><%= instituicao.nome %></td>
              <td><%= instituicao.cnpj %></td>
              <td><%= instituicao.endereco %></td>
              <td><%= instituicao.telefone || 'Não informado' %></td>
              <td>
                <button class="btn btn-secondary btn-editar" data-id="<%= instituicao.id %>">Editar</button>
                <button class="btn btn-danger btn-excluir" data-id="<%= instituicao.id %>">Excluir</button>
              </td>
            </tr>
          <% }); %>
        <% } else { %>
          <tr>
            <td colspan="6" style="text-align: center;">Nenhuma instituição de ensino cadastrada.</td>
          </tr>
        <% } %>
      </tbody>
    </table>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Função para carregar instituições
      async function carregarInstituicoes() {
        try {
          const response = await fetch('/instituicoes');
          
          if (!response.ok) {
            throw new Error('Falha ao carregar instituições');
          }
          
          const instituicoes = await response.json();
          const tbody = document.getElementById('tabela-instituicoes');
          
          tbody.innerHTML = '';
          
          if (instituicoes.length === 0) {
            const tr = document.createElement('tr');
            tr.innerHTML = `<td colspan="6" style="text-align: center;">Nenhuma instituição de ensino cadastrada.</td>`;
            tbody.appendChild(tr);
            return;
          }
          
          instituicoes.forEach(instituicao => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
              <td>${instituicao.id}</td>
              <td>${instituicao.nome}</td>
              <td>${instituicao.cnpj}</td>
              <td>${instituicao.endereco}</td>
              <td>${instituicao.telefone || 'Não informado'}</td>
              <td>
                <button class="btn btn-secondary btn-editar" data-id="${instituicao.id}">Editar</button>
                <button class="btn btn-danger btn-excluir" data-id="${instituicao.id}">Excluir</button>
              </td>
            `;
            tbody.appendChild(tr);
          });
          
          // Anexar eventos aos botões
          document.querySelectorAll('.btn-editar').forEach(btn => {
            btn.addEventListener('click', (e) => {
              const id = e.target.getAttribute('data-id');
              editarInstituicao(id);
            });
          });
          
          document.querySelectorAll('.btn-excluir').forEach(btn => {
            btn.addEventListener('click', (e) => {
              const id = e.target.getAttribute('data-id');
              excluirInstituicao(id);
            });
          });
          
        } catch (error) {
          console.error('Erro ao carregar instituições:', error);
          alert('Não foi possível carregar a lista de instituições. Por favor, tente novamente mais tarde.');
        }
      }
      
      // Carrega instituições ao iniciar
      carregarInstituicoes();
      
      // Evento para nova instituição
      document.getElementById('btn-nova-instituicao').addEventListener('click', () => {
        // Aqui você pode implementar o código para abrir um modal
        // ou redirecionar para uma página de criação de instituição
        alert('Funcionalidade para criar nova instituição a ser implementada');
      });
      
      // Função para editar instituição
      function editarInstituicao(id) {
        alert(`Funcionalidade para editar instituição ID ${id} a ser implementada`);
      }
      
      // Função para excluir instituição
      async function excluirInstituicao(id) {
        if (!confirm('Tem certeza que deseja excluir esta instituição?')) {
          return;
        }
        
        try {
          const response = await fetch(`/instituicoes/${id}`, {
            method: 'DELETE'
          });
          
          const data = await response.json();
          
          if (response.ok) {
            alert('Instituição excluída com sucesso!');
            carregarInstituicoes();
          } else {
            alert(data.erro || 'Não foi possível excluir a instituição.');
          }
        } catch (error) {
          console.error('Erro ao excluir instituição:', error);
          alert('Ocorreu um erro ao tentar excluir a instituição. Por favor, tente novamente mais tarde.');
        }
      }
    });
  </script>
</body>
</html> 